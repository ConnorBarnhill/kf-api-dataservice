"""
1.0.0 - First Kids First Data Model release

Revision ID: 7575993b35a7
Revises: 
Create Date: 2018-05-07 10:15:23.454076

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import dataservice

# revision identifiers, used by Alembic.
revision = '7575993b35a7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alias_group',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('cavatica_app',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_cavatica_app_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('revision', sa.Integer(), nullable=True),
    sa.Column('github_commit_url', sa.Text(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('family',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('investigator',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('institution', sa.Text(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('sequencing_center',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('cavatica_task',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_cavatica_task_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('cavatica_app_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['cavatica_app_id'], ['cavatica_app.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('sequencing_experiment',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=False),
    sa.Column('experiment_date', sa.DateTime(), nullable=True),
    sa.Column('experiment_strategy', sa.Text(), nullable=False),
    sa.Column('library_name', sa.Text(), nullable=True),
    sa.Column('library_strand', sa.Text(), nullable=True),
    sa.Column('is_paired_end', sa.Boolean(), nullable=False),
    sa.Column('platform', sa.Text(), nullable=False),
    sa.Column('instrument_model', sa.Text(), nullable=True),
    sa.Column('max_insert_size', sa.Integer(), nullable=True),
    sa.Column('mean_insert_size', sa.Float(), nullable=True),
    sa.Column('mean_depth', sa.Float(), nullable=True),
    sa.Column('total_reads', sa.Integer(), nullable=True),
    sa.Column('mean_read_length', sa.Float(), nullable=True),
    sa.Column('sequencing_center_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['sequencing_center_id'], ['sequencing_center.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('study',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('data_access_authority', sa.Text(), nullable=False),
    sa.Column('external_id', sa.Text(), nullable=False),
    sa.Column('version', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('short_name', sa.Text(), nullable=True),
    sa.Column('attribution', sa.Text(), nullable=True),
    sa.Column('release_status', sa.Text(), nullable=True),
    sa.Column('investigator_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['investigator_id'], ['investigator.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('participant',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('family_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('is_proband', sa.Boolean(), nullable=False),
    sa.Column('consent_type', sa.Text(), nullable=True),
    sa.Column('race', sa.Text(), nullable=True),
    sa.Column('ethnicity', sa.Text(), nullable=True),
    sa.Column('gender', sa.Text(), nullable=True),
    sa.Column('study_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('alias_group_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['alias_group_id'], ['alias_group.kf_id'], ),
    sa.ForeignKeyConstraint(['family_id'], ['family.kf_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('study_file',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('latest_did', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('study_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('availability', sa.Text(), nullable=True),
    sa.Column('data_type', sa.Text(), nullable=True),
    sa.Column('file_format', sa.Text(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['study.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('biospecimen',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_sample_id', sa.Text(), nullable=True),
    sa.Column('external_aliquot_id', sa.Text(), nullable=True),
    sa.Column('source_text_tissue_type', sa.Text(), nullable=True),
    sa.Column('composition', sa.Text(), nullable=True),
    sa.Column('source_text_anatomical_site', sa.Text(), nullable=True),
    sa.Column('age_at_event_days', sa.Integer(), nullable=True),
    sa.Column('source_text_tumor_descriptor', sa.Text(), nullable=True),
    sa.Column('shipment_origin', sa.Text(), nullable=True),
    sa.Column('analyte_type', sa.Text(), nullable=False),
    sa.Column('concentration_mg_per_ml', sa.Float(), nullable=True),
    sa.Column('volume_ml', sa.Float(), nullable=True),
    sa.Column('shipment_date', sa.DateTime(), nullable=True),
    sa.Column('uberon_id_anatomical_site', sa.Text(), nullable=True),
    sa.Column('ncit_id_tissue_type', sa.Text(), nullable=True),
    sa.Column('ncit_id_anatomical_site', sa.Text(), nullable=True),
    sa.Column('spatial_descriptor', sa.Text(), nullable=True),
    sa.Column('participant_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('sequencing_center_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.kf_id'], ),
    sa.ForeignKeyConstraint(['sequencing_center_id'], ['sequencing_center.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('diagnosis',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('source_text_diagnosis', sa.Text(), nullable=True),
    sa.Column('diagnosis_category', sa.Text(), nullable=True),
    sa.Column('source_text_tumor_location', sa.Text(), nullable=True),
    sa.Column('age_at_event_days', sa.Integer(), nullable=True),
    sa.Column('mondo_id_diagnosis', sa.Text(), nullable=True),
    sa.Column('icd_id_diagnosis', sa.Text(), nullable=True),
    sa.Column('uberon_id_tumor_location', sa.Text(), nullable=True),
    sa.Column('ncit_id_diagnosis', sa.Text(), nullable=True),
    sa.Column('spatial_descriptor', sa.Text(), nullable=True),
    sa.Column('participant_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('family_relationship',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('participant_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('relative_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('participant_to_relative_relation', sa.Text(), nullable=False),
    sa.Column('relative_to_participant_relation', sa.Text(), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.kf_id'], ),
    sa.ForeignKeyConstraint(['relative_id'], ['participant.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('participant_id', 'relative_id', 'participant_to_relative_relation', 'relative_to_participant_relation'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('outcome',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('vital_status', sa.Text(), nullable=True),
    sa.Column('disease_related', sa.Text(), nullable=True),
    sa.Column('age_at_event_days', sa.Integer(), nullable=True),
    sa.Column('participant_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('phenotype',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('source_text_phenotype', sa.Text(), nullable=True),
    sa.Column('hpo_id_phenotype', sa.Text(), nullable=True),
    sa.Column('snomed_id_phenotype', sa.Text(), nullable=True),
    sa.Column('observed', sa.Text(), nullable=True),
    sa.Column('age_at_event_days', sa.Integer(), nullable=True),
    sa.Column('participant_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('genomic_file',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('latest_did', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('data_type', sa.Text(), nullable=True),
    sa.Column('file_format', sa.Text(), nullable=True),
    sa.Column('is_harmonized', sa.Boolean(), nullable=True),
    sa.Column('reference_genome', sa.Text(), nullable=True),
    sa.Column('controlled_access', sa.Boolean(), nullable=True),
    sa.Column('availability', sa.Text(), nullable=True),
    sa.Column('sequencing_experiment_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('biospecimen_id', dataservice.api.common.model.KfId(length=11), nullable=True),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['biospecimen_id'], ['biospecimen.kf_id'], ),
    sa.ForeignKeyConstraint(['sequencing_experiment_id'], ['sequencing_experiment.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('cavatica_task_genomic_file',
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('genomic_file_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('cavatica_task_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.Column('is_input', sa.Boolean(), nullable=False),
    sa.Column('kf_id', dataservice.api.common.model.KfId(length=11), nullable=False),
    sa.ForeignKeyConstraint(['cavatica_task_id'], ['cavatica_task.kf_id'], ),
    sa.ForeignKeyConstraint(['genomic_file_id'], ['genomic_file.kf_id'], ),
    sa.PrimaryKeyConstraint('kf_id'),
    sa.UniqueConstraint('genomic_file_id', 'cavatica_task_id', 'is_input'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cavatica_task_genomic_file')
    op.drop_table('genomic_file')
    op.drop_table('phenotype')
    op.drop_table('outcome')
    op.drop_table('family_relationship')
    op.drop_table('diagnosis')
    op.drop_table('biospecimen')
    op.drop_table('study_file')
    op.drop_table('participant')
    op.drop_table('study')
    op.drop_table('sequencing_experiment')
    op.drop_table('cavatica_task')
    op.drop_table('sequencing_center')
    op.drop_table('investigator')
    op.drop_table('family')
    op.drop_table('cavatica_app')
    op.drop_table('alias_group')
    # ### end Alembic commands ###
